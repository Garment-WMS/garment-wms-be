model ImportReceipt {
  id                 String              @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  warehouseStaffId   String              @map("warehouse_staff_id") @db.Uuid
  warehouseManagerId String              @map("warehouse_manager_id") @db.Uuid
  inspectionReportId String?             @unique @map("inspection_report_id") @db.Uuid
  code               String?             @map("code") @db.VarChar
  status             ImportReceiptStatus @default(IMPORTING)
  type               ReceiptType         @map("type")
  note               String?             @map("note") @db.Text
  startedAt          DateTime?           @default(now()) @map("started_at") @db.Timestamptz(6)
  finishedAt         DateTime?           @map("finished_at") @db.Timestamptz(6)
  createdAt          DateTime?           @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime?           @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt          DateTime?           @map("deleted_at") @db.Timestamptz(6)
  inspectionReport   InspectionReport?   @relation(fields: [inspectionReportId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  warehouseStaff     WarehouseStaff?     @relation(fields: [warehouseStaffId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  materialReceipt    MaterialReceipt[]
  productReceipt     ProductReceipt[]
  warehouseManager   WarehouseManager?   @relation(fields: [warehouseManagerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  task               Task[]
  discussion         Discussion?

  @@map("import_receipt")
}

enum ReceiptType {
  MATERIAL
  PRODUCT
}

enum ImportReceiptStatus {
  AWAIT_TO_IMPORT
  IMPORTING
  REJECTED
  IMPORTED

  @@map("receipt_status")
}
