model ImportRequest {
  id                     String                @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  warehouseStaffId       String?               @map("warehouse_staff_id") @db.Uuid
  poDeliveryId           String?               @map("po_delivery_id") @db.Uuid
  purchasingStaffId      String?               @map("purchasing_staff_id") @db.Uuid
  warehouseManagerId     String?               @map("warehouse_manager_id") @db.Uuid
  productionDepartmentId String?               @map("production_department_id") @db.Uuid
  productionBatchId      String?               @map("production_batch_id") @db.Uuid
  status                 ImportRequestStatus   @default(ARRIVED)
  code                   String?               @map("code") @db.VarChar
  type                   ImportRequestType     @map("import_request_type")
  startedAt              DateTime?             @map("started_at") @db.Timestamptz(6)
  finishedAt             DateTime?             @map("finished_at") @db.Timestamptz(6)
  cancelledAt            DateTime?             @map("cancelled_at") @db.Timestamptz(6)
  cancelReason           String?               @map("cancelled_reason") @db.VarChar
  description            String?               @map("description") @db.VarChar
  managerNote            String?               @map("manager_note") @db.VarChar
  rejectAt               DateTime?             @map("reject_at") @db.Timestamptz(6)
  createdAt              DateTime?             @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt              DateTime?             @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt              DateTime?             @map("deleted_at") @db.Timestamptz(6)
  poDelivery             PoDelivery?           @relation(fields: [poDeliveryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchasingStaff        PurchasingStaff?      @relation(fields: [purchasingStaffId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  warehouseManager       WarehouseManager?     @relation(fields: [warehouseManagerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  warehouseStaff         WarehouseStaff?       @relation(fields: [warehouseStaffId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  productionBatch        ProductionBatch?      @relation(fields: [productionBatchId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  productionDepartment   ProductionDepartment? @relation(fields: [productionDepartmentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  importRequestDetail    ImportRequestDetail[]
  inspectionRequest      InspectionRequest[]
  discussion             Discussion?

  @@map("import_request")
}

enum ImportRequestStatus {
  ARRIVED //purchasing staff
  CANCELED //purchasing staff
  REJECTED //warehouse manager
  APPROVED //warehouse manager
  INSPECTING //inspection department
  INSPECTED //inspection department
  IMPORTING //warehouse staff
  IMPORTED //warehouse staff

  @@map("import_request_status")
}

enum ImportRequestType {
  MATERIAL_BY_PO
  MATERIAL_RETURN
  MATERIAL_NOT_BY_PO
  PRODUCT_BY_BATCH
  PRODUCT_RETURN
  PRODUCT_NOT_BY_BATCH

  @@map("import_request_type")
}
