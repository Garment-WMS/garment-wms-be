model ImportRequest {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  warehouseStaffId    String?               @map("warehouse_staff_id") @db.Uuid
  status              ImportRequestStatus   @default(PENDING)
  from                String?               @db.VarChar
  to                  String?               @db.VarChar
  startAt             DateTime?             @map("start_at") @db.Timestamptz(6)
  finishAt            DateTime?             @map("finish_at") @db.Timestamptz(6)
  createdAt           DateTime?             @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt           DateTime?             @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt           DateTime?             @map("deleted_at") @db.Timestamptz(6)
  cancelAt            DateTime?             @map("cancel_at") @db.Timestamptz(6)
  cancelReason        String?               @map("cancel_reason") @db.VarChar
  description         String?               @db.VarChar
  poDeliveryId        String                @map("po_delivery_id") @db.Uuid
  purchasingStaffId   String?               @map("purchasing_staff_id") @db.Uuid
  rejectAt            DateTime?             @map("reject_at") @db.Timestamptz(6)
  rejectReason        String?               @map("reject_reason") @db.VarChar
  warehouseManagerId  String?               @map("warehouse_manager_id") @db.Uuid
  import_request_type ImportRequestType
  poDelivery          PoDelivery            @relation(fields: [poDeliveryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchasingStaff     PurchasingStaff?      @relation(fields: [purchasingStaffId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  warehouseManager    WarehouseManager?     @relation(fields: [warehouseManagerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  warehouseStaff      WarehouseStaff?       @relation(fields: [warehouseStaffId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  importRequestDetail ImportRequestDetail[]

  @@map("import_request")
}

enum ImportRequestStatus {
  PENDING
  REJECTED
  APPROVED
  INSPECTING
  INSPECTED
  IMPORTING
  IMPORTED
  CANCELED

  @@map("import_request_status")
}

enum ImportRequestType {
  MATERIAL_BY_PO
  MATERIAL_RETURN
  MATERIAL_NOT_BY_PO
  PRODUCT_BY_MO
  PRODUCT_RETURN
  PRODUCT_NOT_BY_MO

  @@map("import_request_type")
}
