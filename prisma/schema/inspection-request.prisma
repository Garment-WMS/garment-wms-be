model InspectionRequest {
  id                     String                   @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  purchasingStaffId      String                  @map("purchasing_staff_id") @db.Uuid
  inspectionDepartmentId String                  @map("inspection_department_id") @db.Uuid
  deliveryNoteId         String                  @map("delivery_note_id") @db.Uuid
  notation               String?
  status                 InspectionRequestStatus
  createdAt  DateTime  @map("created_at") @db.Timestamptz(6) @default(now())
  updatedAt              DateTime?                @map("updated_at") @db.Timestamptz(6)
  deletedAt              DateTime?                @map("deleted_at") @db.Timestamptz(6)

  inspectionDepartment InspectionDepartment @relation(fields: [inspectionDepartmentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchasingStaff      PurchasingStaff      @relation(fields: [purchasingStaffId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("inspection_request")
}

enum InspectionRequestStatus {
  PENDING
  CANCELLED
  IN_PROGESS
  FINISHED

  @@map("inspection_request_status")
}
