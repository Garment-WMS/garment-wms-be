model InspectionRequest {
  id                     String                  @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  purchasingStaffId      String                  @map("purchasing_staff_id") @db.Uuid
  inspectionDepartmentId String                  @map("inspection_department_id") @db.Uuid
  importRequestId        String                  @map("import_request_id") @db.Uuid
  note                   String?                 @map("note")
  status                 InspectionRequestStatus
  createdAt              DateTime?               @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt              DateTime?               @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt              DateTime?               @map("deleted_at") @db.Timestamptz(6)
  inspectionDepartment   InspectionDepartment    @relation(fields: [inspectionDepartmentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchasingStaff        PurchasingStaff         @relation(fields: [purchasingStaffId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  importRequest          ImportRequest           @relation(fields: [importRequestId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inspectionReport       InspectionReport[]

  @@map("inspection_request")
}

enum InspectionRequestStatus {
  PENDING
  CANCELLED
  IN_PROGESS
  FINISHED

  @@map("inspection_request_status")
}
